{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 \
#include <stdio.h>\
#include<stdlib.h>\
#define MAX 4\
\
int stack_arr[MAX];\
int top = -1;\
\
int isFull()\{\
   if (top == MAX - 1)\{\
       return 1;\
   \} else\{\
       return 0;\
   \}\
\}\
\
int isEmpty()\{\
    if (top == -1 )\{\
        return 1;\
    \}else\{\
        return 0;\
    \}\
\}\
\
int pop()\{\
    int value ;\
    if (isEmpty())\{\
        printf("Stack Underflow");\
        exit(1);\
    \}\
    value = stack_arr[top];\
    top = top - 1;\
    return value;\
\}\
\
void push(int data)\{\
    if (isFull())\{\
        printf("Stack Overflow");\
        return;\
    \}\
    top = top + 1;\
    stack_arr[top] = data ;\
\}\
\
int peek()\{\
    if(isEmpty())\{\
        printf("Stack Underflow");\
        exit(1);\
    \}\
    return stack_arr[top];\
\}\
\
void print()\{\
    int i ;\
    if (top == -1 )\{\
        printf("Stack Underflow");\
        return;\
    \}\
    \
    for ( i=top ; i >= 0 ; i--)\{\
        printf("%d ",stack_arr[i]);\
    \}\
\}\
int main() \{\
    \
    int choice,data;\
    while (1)\{\
        printf("\\n");\
        printf("1: Push \\n");\
        printf("2: Pop \\n");\
        printf("3: Print the top element \\n");\
        printf("4: Print all the elements of the stack \\n");\
        printf("5: Quit \\n");\
        printf("Enter your choice;");\
        scanf("%d",&choice);\
        \
        switch(choice)\{\
            case 1:\
                printf("Enter the element to be pushed:");\
                scanf("%d",&data);\
                push(data);\
                break;\
            case 2:\
                data = pop();\
                printf("Deleted element i s%d",data);\
                break;\
            case 3:\
                printf("The top most element if the stack is %d \\n",peek());\
                break;\
            case 4:\
                print();\
                break;\
            case 5:\
                exit(1);\
                \
            default:\
                printf("Wrong Choice");\
        \}\
    \}\
    return 0;\
\}}