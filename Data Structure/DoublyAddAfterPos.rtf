{\rtf1\ansi\ansicpg1252\cocoartf2759
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww11520\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 // Online C compiler to run C program online\
#include <stdio.h>\
#include <stdlib.h>\
\
struct node\{\
    struct node *prev;\
    int data;\
    struct node *next;\
\};\
\
\
struct node* addToBeg(struct node* head,int data)\{\
    struct node* temp = malloc(sizeof(struct node));\
    temp ->prev = NULL;\
    temp -> next = NULL;\
    temp -> data = data;\
    temp ->next = head;\
    head -> prev = temp;\
    head = temp;\
    return head;\
    \
\}\
\
struct node* addAtEnd(struct node* head,int data)\{\
    struct node *temp,*tp;\
    temp = malloc(sizeof(struct node));\
    temp ->prev = NULL;\
    temp -> next = NULL;\
    temp -> data = data;\
    tp = head;\
    \
    while (tp->next != NULL)\{\
        tp = tp->next;\
    \}\
    \
    tp -> next = temp;\
    temp -> prev = tp;\
\
    return head;\
    \
\}\
\
struct node* addToEmpty(struct node* head, int data)\{\
    struct node* ptr = malloc(sizeof(struct node));\
    ptr->prev = NULL;\
    ptr->next = NULL;\
    ptr -> data = data;\
    head = ptr;\
    return head;\
    \
\}\
\
struct node* addAfterPos(struct node* head, int data,int position)\{\
    //add at after 2nd postion\
    struct node* newP = NULL;\
    struct node* temp =head;\
    struct node * temp2= NULL;\
    newP = addToEmpty(newP,data);\
    \
    while (position != 1)\{\
        temp = temp-> next;\
        position--;\
    \}\
    temp2 = temp-> next;\
    newP -> prev = temp;\
    newP -> next = temp2;\
    temp -> next = newP;\
    temp2 -> prev = newP;\
     \
    return head;\
\}\
\
int main() \{\
    struct node *head = NULL;\
    struct node *ptr;\
    head= addToEmpty(head,33);\
    head = addToBeg(head,44);\
    head= addAtEnd(head,55);\
    head = addAfterPos(head,99,2);\
    ptr = head;\
    \
    while (ptr != NULL)\{\
        printf("%d  ", ptr->data);\
        ptr = ptr-> next;\
    \}\
    return 0;\
\}}